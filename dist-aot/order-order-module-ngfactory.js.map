{"version":3,"sources":["webpack:///./src/app/order/neworder/neworder.component.html","webpack:///./src/app/order/neworder/neworder.component.ts","webpack:///./src/app/order/order.module.ts","webpack:///./src/app/order/orderlist/orderlist.component.html","webpack:///./src/app/order/orderlist/orderlist.component.ts","webpack:///./src/app/order/orderrouteguard.service.ts"],"names":[],"mappings":"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","file":"order-order-module-ngfactory.js","sourcesContent":["<div>\n  <h4>New Order : Sample Order</h4>\n\n  Order Name : <input type=\"text\" [(ngModel)]=\"isDirty\" /> <br /><br />\n\n  Order List :\n\n  <ol>\n    <li *ngFor=\"let order of orderList\">{{ order.description }}</li>\n  </ol>\n\n  <a routerLink=\"orderlist\">Order List</a> <br /><br />\n\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-neworder\",\n  templateUrl: \"./neworder.component.html\",\n  styleUrls: [\"./neworder.component.css\"]\n})\nexport class NeworderComponent implements OnInit {\n  isDirty = \"true\";\n\n  orderList;\n  constructor(private acitvatedRoute: ActivatedRoute) {\n    this.orderList = this.acitvatedRoute.snapshot.data[\"orderlist\"];\n  }\n\n  ngOnInit() {}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { NeworderComponent } from \"./neworder/neworder.component\";\nimport { OrderlistComponent } from \"./orderlist/orderlist.component\";\nimport { RouterModule } from \"@angular/router\";\nimport { OrderrouteguardService } from \"./orderrouteguard.service\";\nimport { FormsModule } from \"@angular/forms\";\n\nconst routes = [\n  {\n    path: \"\",\n    component: NeworderComponent,\n    canActivate: [OrderrouteguardService],\n    resolve: { orderlist: OrderrouteguardService },\n    canDeactivate: [OrderrouteguardService],\n\n    children: [{ path: \"orderlist\", component: OrderlistComponent }]\n  }\n];\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes), FormsModule],\n  declarations: [NeworderComponent, OrderlistComponent],\n  providers: [OrderrouteguardService]\n})\nexport class OrderModule {}\n","<p>\n  orderlist works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-orderlist',\n  templateUrl: './orderlist.component.html',\n  styleUrls: ['./orderlist.component.css']\n})\nexport class OrderlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  CanDeactivate,\n  Resolve\n} from \"@angular/router\";\nimport { NeworderComponent } from \"./neworder/neworder.component\";\n\n@Injectable()\nexport class OrderrouteguardService\n  implements CanActivate, CanDeactivate<NeworderComponent>, Resolve <Order[]> {\n  constructor() {}\n\n  isLogin = true;\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    console.log(\"Can Activate Called... \" + state.url + \" : \" + state.root);\n\n    // Writer a code to check the user login token and ...\n\n    return this.isLogin;\n  }\n\n  canDeactivate(\n    component: NeworderComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot\n  ): boolean {\n    console.log(\"Can DeActivate Called... \");\n\n    return !(component.isDirty == \"false\");\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) :  Order[] {\n\n    // Can read from DB or from API call then it will become async. \n    let orderList = [\n      {orderid : 100, description : \"product 1\", deliveryStatus : \"Delivered\"},\n      {orderid : 101, description : \"product 2\", deliveryStatus : \"Packaed for Delivered\"},\n      {orderid : 102, description : \"product 3\", deliveryStatus : \"Delivered\"},\n      {orderid : 103, description : \"product 4\", deliveryStatus : \"Out for Delivery\"}\n    ];\n    return orderList;\n  }\n}\n\nexport class Order {\n  orderid;\n  description;\n  deliveryStatus;\n}\n"],"sourceRoot":""}